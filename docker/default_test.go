package docker_test

import (
	"fmt"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/suite"
	"gitlab.com/gitlab-red-team/private-research/cve-2021-22205-hash-generator/docker"
	"gitlab.com/gitlab-red-team/private-research/cve-2021-22205-hash-generator/tags"
	"os/exec"
	"testing"
)

type DockerTestSuite struct {
	suite.Suite
	ValidCommandResult        string
	ValidCommandResultError   *exec.ExitError
	NonExistentCmdResult      string
	NonExistentCmdResultError *exec.ExitError
}

func (suite *DockerTestSuite) SetupTest() {
	suite.ValidCommandResult, suite.ValidCommandResultError =
		docker.ExecuteRun(tags.Tag{Version: "latest", Edition: tags.CE})
	suite.NonExistentCmdResult, suite.NonExistentCmdResultError =
		docker.ExecuteRun(tags.Tag{Version: "non-existent", Edition: tags.CE})
}

func (suite *DockerTestSuite) TestExecuteRun() {
	assert.True(suite.T(), suite.ValidCommandResultError == nil)
	assert.True(suite.T(), len(suite.ValidCommandResult) > 0)
}

func (suite *DockerTestSuite) TestExecuteRunWithError() {
	assert.Equal(suite.T(), "Unable to find image 'gitlab/gitlab-ce:non-existent' locally\ndocker: Error response from daemon: manifest for gitlab/gitlab-ce:non-existent not found: manifest unknown: manifest unknown.\nSee 'docker run --help'.\n",
		fmt.Sprintf("%s", suite.NonExistentCmdResultError.Stderr))
	assert.True(suite.T(), len(suite.NonExistentCmdResult) == 0)
}

func TestDockerTestSuite(t *testing.T) {
	suite.Run(t, new(DockerTestSuite))
}
