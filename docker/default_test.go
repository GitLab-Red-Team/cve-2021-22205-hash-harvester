package docker_test

import (
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/suite"
	"gitlab.com/gitlab-red-team/private-research/cve-2021-22205-hash-generator/docker"
	"gitlab.com/gitlab-red-team/private-research/cve-2021-22205-hash-generator/tags"
	"testing"
)

type DockerTestSuite struct {
	suite.Suite
	EchoCommandResult string
	EchoCommandResultError error
	NonExistentCmdResult string
	NonExistentCmdResultError error
}

func (suite *DockerTestSuite) SetupTest() {
	suite.EchoCommandResult, suite.EchoCommandResultError =
		docker.ExecuteRun(tags.Tag{Version: "latest", Edition: tags.CE})
	suite.NonExistentCmdResult, suite.NonExistentCmdResultError =
		docker.ExecuteRun(tags.Tag{Version: "non-existent", Edition: tags.CE})
}

func (suite *DockerTestSuite) TestExecuteRun() {
	assert.True(suite.T(), len(suite.EchoCommandResult) > 0)
	assert.True(suite.T(), suite.EchoCommandResultError == nil)
}

func (suite *DockerTestSuite) TestExecuteRunWithError() {
	assert.True(suite.T(), len(suite.NonExistentCmdResult) == 0)
	assert.True(suite.T(), suite.NonExistentCmdResultError != nil)
}

func TestDockerTestSuite(t *testing.T) {
	suite.Run(t, new(DockerTestSuite))
}