package docker

import (
	"fmt"
	"gitlab.com/gitlab-red-team/private-research/cve-2021-22205-hash-generator/tags"
	"os/exec"
	"strings"
)

type Command struct {
	Cmd string
	Args []string
}

func (c *Command) string() string {
	return fmt.Sprintf("%s %s", c.Cmd, fmt.Sprintf(strings.Join(c.Args[:], " ")))
}

func executeCommand(dockerCmd Command) (string, *exec.ExitError) {
	cmd := exec.Command(dockerCmd.Cmd, dockerCmd.Args...)
	stdOut, err := cmd.Output()
	if err != nil {
		exitErr := err.(*exec.ExitError)
		return "", exitErr
	}
	return fmt.Sprint(stdOut), nil
}

// ExecuteRun docker run --rm -it --entrypoint "" gitlab/gitlab-ce:$tag ls $assetdir|egrep '^application-.*\.css' | grep -v \.gz
func ExecuteRun(tag tags.Tag) (string, *exec.ExitError) {
	runCmd := Command{
		Cmd:  "docker",
		Args: []string{"run", "--rm", "-i", "--entrypoint", "ls", tag.ImageFull(), "/opt/gitlab/embedded/service/gitlab-rails/public/assets | egrep '^application-.*.css' | grep -v .gz"},
	}
	fmt.Printf("Executing: %s\n", runCmd.string())
	return executeCommand(runCmd)
}
