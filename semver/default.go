package semver

import (
	"github.com/Masterminds/semver"
)

func panicOnError(err error) {
	if err == nil {
		return
	}
	panic(err)
}

func getTypedConstraints(constraintStrings []string) ([]*semver.Constraints, error) {
	var constraints []*semver.Constraints
	for _, s := range constraintStrings {
		constraint, err := semver.NewConstraint(s)
		if err != nil {
			return nil, err
		}
		constraints = append(constraints, constraint)
	}
	return constraints, nil
}

func VersionIsInRange(constraints []string, version string) (bool, error) {
	typedConstraints, typedConstraintsErr := getTypedConstraints(constraints)
	if typedConstraintsErr != nil {
		return false, typedConstraintsErr
	}
	typedVersion, newVersionErr := semver.NewVersion(version)
	if newVersionErr != nil {
		return false, newVersionErr
	}
	for _, c := range typedConstraints {
		if c.Check(typedVersion) {
			return true, nil
		}
	}
	return false, nil
}
