package io

import (
	"errors"
	"fmt"
	"os"
)

func Exists(name string) (bool, error) {
	_, err := os.Stat(name)
	if err == nil {
		return true, nil
	}
	if errors.Is(err, os.ErrNotExist) {
		return false, nil
	}
	return false, err
}

func WriteHashToFile(hash string, fileName string) error {
	var file *os.File
	var createError error
	fileExists, _ := Exists(fileName)
	if !fileExists {
		file, createError = os.Create(fileName)
		if createError != nil {
			return createError
		}
	}
	defer func() {
		e := file.Close()
		if e != nil {
			fmt.Printf("[!] Error occured closing file %s:\n%s\n", fileName, e)
		}
	}()
	_, writeError := file.Write([]byte(hash))
	if writeError != nil {
		return writeError
	}
	return nil
}
