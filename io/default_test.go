package io_test

import (
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/suite"
	"gitlab.com/gitlab-red-team/private-research/cve-2021-22205-hash-generator/io"
	"os"
	"testing"
)

type ioTestSuite struct {
	suite.Suite
	WriteFileError1      error
	WriteFileError2      error
	WriteFileError3      error
	FileName             string
	ActualFileContent    []byte
	FileContentError     error
	ExpectedFileContent1 string
	ExpectedFileContent2 string
	RepeatedFileContent  error
	EnvVarLoaderNoError  io.EnvironmentVariableLoader
	GetEnvNoError        io.GetEnv
	ExpectedMongoURI     string
	ActualMongoURI       string
}

func (suite *ioTestSuite) SetupTest() {
	suite.ExpectedMongoURI = "mongodb://root:password@mongo:27017/"
	suite.EnvVarLoaderNoError = func(filenames ...string) error {
		return nil
	}
	suite.GetEnvNoError = func(key string) string {
		return suite.ExpectedMongoURI
	}
	suite.ActualMongoURI = io.GetMongodbURI(suite.EnvVarLoaderNoError, suite.GetEnvNoError)
}

func (suite *ioTestSuite) TearDownTest() {
	_ = os.Remove(suite.FileName)
}

func (suite *ioTestSuite) TestEnvVarRetrieval() {
	assert.Equal(suite.T(), suite.ExpectedMongoURI, suite.ActualMongoURI)
}

func TestIoTestSuite(t *testing.T) {
	suite.Run(t, new(ioTestSuite))
}
