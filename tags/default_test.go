package tags_test

import (
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/suite"
	"gitlab.com/gitlab-red-team/private-research/cve-2021-22205-hash-generator/tags"
	"testing"
)

type TagsTestSuite struct {
	suite.Suite
	EeEdition tags.Edition
	CeEdition tags.Edition
	EeEditionString string
	CeEditionString string
	TagWanted tags.Tag
	DockerTags []tags.Tag
}

func (suite *TagsTestSuite) SetupTest() {
	suite.EeEdition = tags.EE
	suite.CeEdition = tags.CE
	suite.EeEditionString = suite.EeEdition.String()
	suite.CeEditionString = suite.CeEdition.String()
	suite.TagWanted = tags.Tag{Edition: tags.CE, Version: "latest"}
	suite.DockerTags = append(suite.DockerTags, tags.GetDockerTags(suite.TagWanted)...)
}

// todo: mock the httpClient wrapper, godt.Client, from the godt package to avoid http calls
func (suite *TagsTestSuite) TestGetDockerTags() {
	assert.True(suite.T(), len(suite.DockerTags) > 0)
}

func (suite *TagsTestSuite) TestEditionString() {
	assert.Equal(suite.T(), suite.EeEditionString, "ee")
	assert.Equal(suite.T(), suite.CeEditionString, "ce")
}

func TestGetDockerTagsTestSuite(t *testing.T) {
	suite.Run(t, new(TagsTestSuite))
}